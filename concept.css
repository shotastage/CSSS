@import Core
@import AutoPrefix


@import Reset.normalize as normalizr
@import Bootstrap as twbs



// Like mixin with type check
@def custom-normalize() -> CSSObject {
	normalizr.style()
	* {
		margin: 0
	}
}


@class Mixins {
	@def size(%vetical: pixel?, %horizontal: pixel?) {
		width: %vertical,
		height: %horizontal
	}

	@def makeButton(%width: pixel, %height: pixel, %bg: color) -> CSSObject {
		display: inline-block,
		height: %height,
		width: %width,
		line-height: %height,
		background: %bg,
		color: #fff
	}
}



@let basic = Mixins()




main.custom-normalize()

.container {
	display: inline-bloxk,
	basic.size(100%, 200px)
}

#toggle {
	basic.size(80, 80)
}



// Functions
// -----------------------------------------------------------------------------
@def size(width: pixel?, height: pixel?) {
	width: width
	height: height
}

// Explicitly define this function.
@def CSSObject -> size(width: pixel?, height: pixel?) -> CSSObject {
	width: width
	height: height
}


// Variables and Constants
// -----------------------------------------------------------------------------
@let default-width = 230px
@let default-color = #fff

@let default-width: pixel = 230px
@let default-color: color = #fff
